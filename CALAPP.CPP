/*******************************************************************************
* FILE NAME: CalApp.cpp                                                        *
*                                                                              *
* DESCRIPTION:                                                                 *
*   Class implementation of the class:                                         *
*     CalApp                                                                   *
* ---------------------------------------------------------------------------- *
* Warning: This file was generated by the VisualAge C++ Visual Builder.        *
* Modifications to this source file will be lost when the part is regenerated. *
*******************************************************************************/
#ifndef _IFRAME_
#include <iframe.hpp>
#endif

#ifndef _ICANVAS_
#include <icanvas.hpp>
#endif

#ifndef _ILISTBOX_
#include <ilistbox.hpp>
#endif

#ifndef _IRECT_
#include <irect.hpp>
#endif

#ifndef _IPOINT_
#include <ipoint.hpp>
#endif

#ifndef _IPUSHBUT_
#include <ipushbut.hpp>
#endif

#ifndef _ISTATTXT_
#include <istattxt.hpp>
#endif

#ifndef _CALENDAR_
#include "Calendar.hpp"
#endif

#ifndef _INOTIFEV_
#include <inotifev.hpp>
#endif

#ifndef _IOBSERVR_
#include <iobservr.hpp>
#endif

#ifndef _ISTDNTFY_
#include <istdntfy.hpp>
#endif

#ifndef _CALAPP_
#include "CalApp.hpp"
#endif

#ifndef _IVBDEFS_
#include <ivbdefs.h>
#endif

#ifndef _ITRACE_
#include <itrace.hpp>
#endif


//*****************************************************************************
// Class definition for CalAppConn0
//*****************************************************************************
class CalAppConn0 : public IObserver, public IStandardNotifier {
public:
   virtual  ~CalAppConn0(){};

   //---------------------------------------------------------------------------
   // public member functions
   //---------------------------------------------------------------------------
   void initialize(IPushButton * aSource, CalAppCalendarFactoryFactory * aTarget)
      {source = aSource; target = aTarget; enableNotification(); };

protected:
   //---------------------------------------------------------------------------
   // protected member functions
   //---------------------------------------------------------------------------
   virtual IObserver & dispatchNotificationEvent(const INotificationEvent & anEvent)
      {
      if (anEvent.notificationId() == IPushButton::buttonClickId)
         {
         IFUNCTRACE_DEVELOP();
         ITRACE_DEVELOP(" firing connection : PushButton1(buttonClickEvent) to CalendarFactory(new))");
         try {target->create();}
         catch (IException& exc) {};
         }
      return(*this);
      };

private:
   //---------------------------------------------------------------------------
   // private member data
   //---------------------------------------------------------------------------
   IPushButton * source;
   CalAppCalendarFactoryFactory * target;


};   //CalAppConn0


//*****************************************************************************
// Class definition for CalAppConn1
//*****************************************************************************
class CalAppConn1 : public IObserver {
public:
   virtual  ~CalAppConn1(){};

   //---------------------------------------------------------------------------
   // public member functions
   //---------------------------------------------------------------------------
   void initialize(ICanvas * aSource, IVBVariablePartPointer<Calendar *> * aTarget)
      {source = aSource; target = aTarget; aligning = false; };
   void setSource()
      {      };
   void setTarget()
      {
      if (!target->target()) return;
      if (aligning==false) {
         IFUNCTRACE_DEVELOP();
         ITRACE_DEVELOP(" firing connection : Canvas(this) to Calendar1(owner))");
         ITRACE_DEVELOP(" setting target from source ");
         aligning = true;
         try {target->target()->setOwner(source);}
         catch (IException& exc) {};
         aligning = false;
         }
      };

protected:
   //---------------------------------------------------------------------------
   // protected member functions
   //---------------------------------------------------------------------------
   virtual IObserver & dispatchNotificationEvent(const INotificationEvent & anEvent)
      {
      if (!target->target()) return(*this);
      if (anEvent.notificationId() == VBINITIALIZEID) setTarget();
      return(*this);
      };

private:
   //---------------------------------------------------------------------------
   // private member data
   //---------------------------------------------------------------------------
   ICanvas * source;
   IVBVariablePartPointer<Calendar *> * target;
   Boolean aligning;


};   //CalAppConn1


//*****************************************************************************
// Class definition for CalAppConn2
//*****************************************************************************
class CalAppConn2 : public IObserver, public IStandardNotifier {
public:
   virtual  ~CalAppConn2(){};

   //---------------------------------------------------------------------------
   // public member functions
   //---------------------------------------------------------------------------
   void initialize(CalAppCalendarFactoryFactory * aSource, IVBVariablePartPointer<Calendar *> * aTarget)
      {source = aSource; target = aTarget; enableNotification(); };

protected:
   //---------------------------------------------------------------------------
   // protected member functions
   //---------------------------------------------------------------------------
   virtual IObserver & dispatchNotificationEvent(const INotificationEvent & anEvent)
      {
      if (!target) return(*this);
      if (anEvent.notificationId() == CalAppCalendarFactoryFactory::newObjectCreatedId)
         {
         IFUNCTRACE_DEVELOP();
         ITRACE_DEVELOP(" firing connection : CalendarFactory(newEvent) to Calendar1(this))");
         try {target->setTarget((Calendar *) (anEvent.eventData().asUnsignedLong()));}
         catch (IException& exc) {};
         }
      return(*this);
      };

private:
   //---------------------------------------------------------------------------
   // private member data
   //---------------------------------------------------------------------------
   CalAppCalendarFactoryFactory * source;
   IVBVariablePartPointer<Calendar *> * target;


};   //CalAppConn2


//*****************************************************************************
// Class definition for CalAppConn3
//*****************************************************************************
class CalAppConn3 : public IObserver, public IStandardNotifier {
public:
   virtual  ~CalAppConn3(){};

   //---------------------------------------------------------------------------
   // public member functions
   //---------------------------------------------------------------------------
   void initialize(IVBVariablePartPointer<Calendar *> * aSource, IListBox * aTarget)
      {source = aSource; target = aTarget; enableNotification(); };
   CalAppConn3 & setText(IVBVariablePartPointer<Calendar *> * aSelf) {iText = aSelf; return *this;};

protected:
   //---------------------------------------------------------------------------
   // protected member functions
   //---------------------------------------------------------------------------
   virtual IObserver & dispatchNotificationEvent(const INotificationEvent & anEvent)
      {
      if (!source->target()) return(*this);
      if (anEvent.notificationId() == Calendar::CalDateSelected)
         {
         IFUNCTRACE_DEVELOP();
         ITRACE_DEVELOP(" firing connection : Calendar1(CalDateSelected) to ListBox1(addAsLast))");
         try {target->addAsLast(iText->target()->getCalCtrl1()->SelectedDay());}
         catch (IException& exc) {};
         }
      return(*this);
      };

private:
   //---------------------------------------------------------------------------
   // private member data
   //---------------------------------------------------------------------------
   IVBVariablePartPointer<Calendar *> * source;
   IListBox * target;
   IVBVariablePartPointer<Calendar *> * iText;


};   //CalAppConn3


//*****************************************************************************
// Class definition for CalAppConn5
//*****************************************************************************
class CalAppConn5 : public IObserver, public IStandardNotifier {
public:
   virtual  ~CalAppConn5(){};

   //---------------------------------------------------------------------------
   // public member functions
   //---------------------------------------------------------------------------
   void initialize(IVBVariablePartPointer<Calendar *> * aSource, IListBox * aTarget)
      {source = aSource; target = aTarget; enableNotification(); };
   CalAppConn5 & setText(IVBVariablePartPointer<Calendar *> * aSelf) {iText = aSelf; return *this;};

protected:
   //---------------------------------------------------------------------------
   // protected member functions
   //---------------------------------------------------------------------------
   virtual IObserver & dispatchNotificationEvent(const INotificationEvent & anEvent)
      {
      if (!source->target()) return(*this);
      if (anEvent.notificationId() == Calendar::CalyyyymmddString)
         {
         IFUNCTRACE_DEVELOP();
         ITRACE_DEVELOP(" firing connection : Calendar1(CalyyyymmddString) to ListBox2(addAsLast))");
         try {target->addAsLast(iText->target()->getCalCtrl1()->SelectedyyyymmddString());}
         catch (IException& exc) {};
         }
      return(*this);
      };

private:
   //---------------------------------------------------------------------------
   // private member data
   //---------------------------------------------------------------------------
   IVBVariablePartPointer<Calendar *> * source;
   IListBox * target;
   IVBVariablePartPointer<Calendar *> * iText;


};   //CalAppConn5


const INotificationId CalAppCalendarFactoryFactory::newObjectCreatedId = "CalAppCalendarFactoryFactory::newObjectCreatedId";

//------------------------------------------------------------------------------
// CalAppCalendarFactoryFactory :: CalAppCalendarFactoryFactory
//------------------------------------------------------------------------------
#pragma export (CalAppCalendarFactoryFactory::CalAppCalendarFactoryFactory(unsigned long))
CalAppCalendarFactoryFactory::CalAppCalendarFactoryFactory(unsigned long anId)
{
   enableNotification();
   partWindowId = anId;
}

//------------------------------------------------------------------------------
// CalAppCalendarFactoryFactory :: ~CalAppCalendarFactoryFactory
//------------------------------------------------------------------------------
#pragma export (CalAppCalendarFactoryFactory::~CalAppCalendarFactoryFactory())
CalAppCalendarFactoryFactory::~CalAppCalendarFactoryFactory()
{
   disableNotification();
}

//------------------------------------------------------------------------------
// CalAppCalendarFactoryFactory :: create
//------------------------------------------------------------------------------
#pragma export (CalAppCalendarFactoryFactory::create())
Calendar * CalAppCalendarFactoryFactory::create()
{
   Calendar *iCalendarFactory = new Calendar(
      partWindowId+WNDOFFSET_CalApp_CalendarFactory, 
      IWindow::desktopWindow(), 
      0, 
      Calendar::defaultFramingSpec());
   iCalendarFactory->enableNotification();
   iCalendarFactory->initializePart();
   notifyObservers(INotificationEvent(newObjectCreatedId, *this, true, IEventData((void *)iCalendarFactory)));
   return(iCalendarFactory);
}

#pragma export (CalApp::readyId)
const INotificationId CalApp::readyId = "CalApp::readyId";

#pragma export (CalApp::partWindowId)
unsigned long CalApp::partWindowId = 0;

//------------------------------------------------------------------------------
// CalApp :: defaultFramingSpec
//------------------------------------------------------------------------------
#pragma export (CalApp::defaultFramingSpec())
const IRectangle CalApp::defaultFramingSpec()
{
   return(IRectangle(IPoint(30, IWindow::desktopWindow()->size().height() - 30 - 239),ISize(381, 239)));
}


//------------------------------------------------------------------------------
// CalApp :: defaultStyle
//------------------------------------------------------------------------------
#pragma export (CalApp::defaultStyle())
const IFrameWindow::Style CalApp::defaultStyle()
{
   return(IFrameWindow::defaultStyle());
}


//------------------------------------------------------------------------------
// CalApp :: defaultTitle
//------------------------------------------------------------------------------
#pragma export (CalApp::defaultTitle())
IString CalApp::defaultTitle()
{
   return("Calendar Application");
}


//------------------------------------------------------------------------------
// CalApp :: CalApp
//------------------------------------------------------------------------------
#pragma export (CalApp::CalApp(unsigned long, IWindow*, IWindow*, const IRectangle&, const IFrameWindow::Style&, const char*))
CalApp::CalApp(
      unsigned long id, 
      IWindow* parent, 
      IWindow* owner, 
      const IRectangle& rect, 
      const IFrameWindow::Style& style, 
      const char* title)
   : IFrameWindow((partWindowId) ? partWindowId : id, parent, owner, rect, style, title)
{
   partWindowId = (partWindowId) ? partWindowId : id;
   iCanvas = new ICanvas(
      IC_FRAME_CLIENT_ID, 
      this, 
      this, 
      IRectangle());
   iListBox1 = new IListBox(
      partWindowId+WNDOFFSET_CalApp_ListBox1, 
      iCanvas, 
      iCanvas, 
      IRectangle(IPoint(13,77),ISize(166, 82)));
   iListBox2 = new IListBox(
      partWindowId+WNDOFFSET_CalApp_ListBox2, 
      iCanvas, 
      iCanvas, 
      IRectangle(IPoint(192,77),ISize(166, 82)));
   iPushButton1 = new IPushButton(
      partWindowId+WNDOFFSET_CalApp_PushButton1, 
      iCanvas, 
      iCanvas, 
      IRectangle(IPoint(139,17),ISize(95, 30)));
   iStaticText1 = new IStaticText(
      partWindowId+WNDOFFSET_CalApp_StaticText1, 
      iCanvas, 
      iCanvas, 
      IRectangle(IPoint(18,159),ISize(77, 21)));
   iStaticText2 = new IStaticText(
      partWindowId+WNDOFFSET_CalApp_StaticText2, 
      iCanvas, 
      iCanvas, 
      IRectangle(IPoint(197,159),ISize(79, 21)));
   iCalendar1 = new IVBVariablePartPointer<Calendar *>();
   iCalendarFactory = new CalAppCalendarFactoryFactory(partWindowId);

   conn0 = new CalAppConn0();
   conn1 = new CalAppConn1();
   conn2 = new CalAppConn2();
   conn3 = new CalAppConn3();
   conn5 = new CalAppConn5();

   this->setFocus();
   this->setClient(iCanvas);
   iPushButton1->setText("Select Date");
   iStaticText1->setText("MM-DD-YY");
   iStaticText2->setText("YYYYMMDD");
}     //end constructor


//------------------------------------------------------------------------------
// CalApp :: ~CalApp
//------------------------------------------------------------------------------
#pragma export (CalApp::~CalApp())
CalApp::~CalApp()
{
   conn0->stopHandlingNotificationsFor(*iPushButton1);
   conn1->stopHandlingNotificationsFor(*iCanvas);
   conn1->stopHandlingNotificationsFor(*iCalendar1);
   conn2->stopHandlingNotificationsFor(*iCalendarFactory);
   conn3->stopHandlingNotificationsFor(*iCalendar1);
   conn5->stopHandlingNotificationsFor(*iCalendar1);

   delete conn0;
   delete conn1;
   delete conn2;
   delete conn3;
   delete conn5;


   delete iCanvas;
   delete iListBox1;
   delete iListBox2;
   delete iPushButton1;
   delete iStaticText1;
   delete iStaticText2;
   delete iCalendar1;
   delete iCalendarFactory;
}

//------------------------------------------------------------------------------
// CalApp :: initializePart
//------------------------------------------------------------------------------
#pragma export (CalApp::initializePart())
CalApp & CalApp::initializePart()
{
   makeConnections();
   notifyObservers(INotificationEvent(readyId, *this));
   return *this;
}


//------------------------------------------------------------------------------
// CalApp :: makeConnections
//------------------------------------------------------------------------------
#pragma export (CalApp::makeConnections())
Boolean CalApp::makeConnections()
{
   this->enableNotification();
   iCanvas->enableNotification();
   iListBox1->enableNotification();
   iListBox2->enableNotification();
   iPushButton1->enableNotification();
   iStaticText1->enableNotification();
   iStaticText2->enableNotification();
   iCalendar1->enableNotification();
   iCalendarFactory->enableNotification();

   conn0->initialize(iPushButton1, iCalendarFactory);
   conn0->handleNotificationsFor(*iPushButton1);
   conn1->initialize(iCanvas, iCalendar1);
   conn1->handleNotificationsFor(*iCanvas);
   conn1->handleNotificationsFor(*iCalendar1);
   conn2->initialize(iCalendarFactory, iCalendar1);
   conn2->handleNotificationsFor(*iCalendarFactory);
   conn3->initialize(iCalendar1, iListBox1);
   conn3->handleNotificationsFor(*iCalendar1);
   conn3->setText(iCalendar1);
   conn5->initialize(iCalendar1, iListBox2);
   conn5->handleNotificationsFor(*iCalendar1);
   conn5->setText(iCalendar1);

   conn1->setTarget();
   return true;
}



